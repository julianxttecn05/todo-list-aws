pipeline {
    agent any

    environment {
        BASE_URL = ""
    }

    stages {
        // Stage 1: Obtener el Código Fuente
        stage('Get Code') {
            agent { label 'agent2' }
            steps {
                script {
                    sh 'whoami'
                    sh 'hostname'
                    git branch: 'develop', credentialsId: 'unirCP1b', url: 'https://github.com/julianxttecn05/todo-list-aws.git'
                }
            }
        }

        // Stage 2: Pruebas de Análisis Estático (Flake8 y Bandit)
        stage('Static Test') {
            agent { label 'agent3' }
            steps {
                script {
                    sh 'whoami'
                    sh 'hostname'
                    sh '''
                    cd src
                    pip install --user flake8 bandit
                    export PATH=$PATH:$HOME/.local/bin  # Agregar Bandit al PATH
                    python -m flake8 --exit-zero --format=pylint . > flake8.out
                    bandit --exit-zero -r . -f custom -o bandit.out --msg-template "{abspath}:{line}: [{test_id}] {msg}"
                    '''
                }
                recordIssues tools: [flake8(name: 'Flake8', pattern: '**/flake8.out')]
                recordIssues tools: [pyLint(name: 'Bandit', pattern: '**/bandit.out')]
            }
        }

        // Stage 3: Construcción
        stage('Build') {
            agent { label 'master' }
            steps {
                sh 'whoami'
                sh 'hostname'
                sh 'sam build'
            }
        }

        // Stage 4: Despliegue
        stage('Deploy') {
            agent { label 'master' }
            steps {
                sh 'whoami'
                sh 'hostname'
                sh 'sam deploy --config-env staging --no-confirm-changeset --s3-bucket cp1-d-julian-sanchez-alcazar'
            }
        }

        // Stage 5: Obtener la URL de la API
        stage('Set API URL') {
            agent { label 'agent2' }
            steps {
                script {
                    sh 'whoami'
                    sh 'hostname'
                    BASE_URL = sh(script: '''
                        aws cloudformation describe-stacks --stack-name todo-list-aws-staging \
                        --query "Stacks[0].Outputs[?OutputKey=='BaseUrlApi'].OutputValue" \
                        --region us-east-1 --output text
                    ''', returnStdout: true).trim()
                    echo "BASE_URL: ${BASE_URL}"
                }
            }
        }

        // Stage 6: Pruebas de Integración
        stage('Rest Test') {
            agent { label 'agent3' }
            steps {
                script {
                    sh 'whoami'
                    sh 'hostname'
                    sh '''
                    export BASE_URL=$(aws cloudformation describe-stacks --stack-name todo-list-aws-staging \
                        --query "Stacks[0].Outputs[?OutputKey=='BaseUrlApi'].OutputValue" \
                        --region us-east-1 --output text)
                    echo "BASE_URL: $BASE_URL"
                    
                    # Ejecutar Pytest y guardar salida
                    pytest test/integration/todoApiTest.py --junitxml=pytest-integration-report.xml | tee pytest_output.log
                    '''
                }
                archiveArtifacts artifacts: 'pytest_output.log', fingerprint: true
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/*.xml', fingerprint: true
            junit '**/pytest-integration-report.xml'
        }
        failure {
            echo 'Pipeline Failed! Please check the logs.'
        }
    }
}

